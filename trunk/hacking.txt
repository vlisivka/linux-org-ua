
# Трохи про те, як воно все зараз працює (неорганізовані нотатки на полях)

## OS

На сервері стоїть alt linux server 4.0, оновлення проводиться щоденно з рутового crontabу
(правда я майже впевнений, що наразі для 4.0 вже не виходять оновлення).

## Бекапи

???

## Довстановлені пакунки

 * mercurial
 * quilt
 * perl-DateTime (і купа залежностей)
 * perl-highlight (самозбірний 3.9)

## locale

Я не знаю чого, але апачу, що запускає скрипти, сказано, щоб він встановлював LANG=uk_UA.UTF8.
Це зумовило використання DateTime замість POSIX/strftime у yabb2rss, може на краще.

## utf8

Загалом, перлу достатньо встановити binmode :utf8 (або еквівалентне :encoding(utf-8)) на
вихідних і вхідних файлових дескрипторах, і після цього усе буде нормально — усі дані, отримані
з цих дескрипторів будуть перекодовані у якесь внутрішнє кодування, і назад на виході.

Власне, те саме стосується будь-яких кодувань - yabb2rss використовує це для вихідного перекодовування.

Увесь виконуваний код, що містить в собі дані у utf8 (не той, що працює з нею, а саме містить!)
має містити use utf8;

## mercurial

Загалом система, що мені дуже подобається, але спроба її використання на цьому сервері завершилася
невдачею через нестачу пам’яті (або обмеження її, але я не хочу лізти в це, поки воно все працює).

## цикл розробки і репозиторії (isbear)

### /var/www/vhosts/linux.org.ua (lou)

SVN-репо рушія сайту і конфігураційних даних.

### http://linux-org-ua.googlecode.com/svn (googlecode)

SVN-репо, де репо на lou є гілкою 'trunk'.

### локальна копія (dev)

Конвертоване у mercurial репо googlecode.

### http://hg.isbear.org.ua/isbear/lou-patches (isbear-patches)

MQ, куди приходять зміни.

### Отож, процес розробки для мене наразі теоретично виглядає якось так:

* щось змінюється у конфігурації (наприклад, через панель керування)
* (?) на lou робиться svn commit, що приходить на googlecode
* у dev:
  * hg qpop -a (знімаються патчі)
  * hg pull && hg update
  * hg qpush -a (накладаються на оновлене репо)
* у dev робляться якісь зміни, патчі mq оновлюються, робиться коміт патчів mq, що приходить у isbear-patches
* на lou робиться
  * quilt pop -a (прибрати накладені патчі)
  * (у patches) hg pull && hg update
  * quilt push <останній потрібний патч> (накласти оновлені патчі)
* коли патч достатньо стабільний, він конвертується у комміт у dev і push’иться на googlecode
* тоді на lou робиться
  * quilt pop -a
  * svn up
  * quilt push <останній потрібний патч>

## quilt

MQ зробили під впливом quilt, але воно значно зручніше завдяки інтеграції з системою контролю версій.
Тож я використовую quilt для швидкого накладання/знімання патчів моєї черги MQ на репо lou.
Найпростіше (що я роблю) накладати/знімати патчі quilt з правами користувача apache, щоб не возитися
потім з правами доступу та chown.

    root:~# su -s /bin/bash apache
    apache:?$ export HOME=/var/www/vhosts/linux.org.ua
    apache:~$ cd
    apache:~$ quilt pop -a
    isbear:patches$ hg pull && hg update
    apache:~$ quilt push highlight-kate

## Мої патчі (isbear)

Робити quilt push -a точно не слід, бо черга також містить в кінці два патчі, що використовуються
при розробці для пристосування до локального середовища тестування.

## Оновлення після конвертації патчів (рецепт)

Потрібно дві консолі (зручний мінімум).

    root:linux.org.ua# find -type d -name '.svn' -print0 | xargs -0 chown -R apache:apache
    root:linux.org.ua# su -s /bin/bash apache
    apache:linux.org.ua$ export HOME=$PWD
    apache:~$ quilt pop -a
    apache:~$ svn up
    isbear:patches$ hg pull
    isbear:patches$ hg update
    apache:~$ quilt push <last_patch>
    apache:~$ exit
    root:linux.org.ua# find -type d -name '.svn' -print0 | xargs -0 chown -R lvm:lvm

<!-- vim: se ft=markdown: -->
